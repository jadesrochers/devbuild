---

  - name: get the current release
    command: lsb_release -cs
    register: releasename

  - debug:
      msg: "The release is: {{ releasename }}"

  - name: apt update
    apt:
      update_cache: yes
      upgrade: dist

  - name: install package over network tools
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common

  - name: get needed key for Docker
    shell: curl -L https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

  - name: get needed key for R
    apt_key:
      keyserver: keyserver.ubuntu.com
      id: E298A3A825C0D65DFD57CBB651716619E084DAB9

  - name: get needed key for virtualbox
    shell: curl -L https://www.virtualbox.org/download/oracle_vbox.asc | sudo apt-key add -

  - name: and the other vb key
    shell: curl -L https://www.virtualbox.org/download/oracle_vbox_2016.asc | sudo apt-key add -

  - name: get needed key for chrome
    shell: curl -L https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

  - name: add repo for docker
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ releasename.stdout }} stable

  - name: add repo for chrome
    apt_repository:
      repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main

  - name: add repo for R
    apt_repository:
      repo: deb https://cloud.r-project.org/bin/linux/ubuntu {{ releasename.stdout }}-cran35/

  - name: add repo for virtualbox
    apt_repository:
      repo: deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian {{ releasename.stdout }} contrib

  - name: add repo for ansible
    apt_repository:
      repo: ppa:ansible/ansible

# git needs to be installed to get this playbook,
# so you should set it up passwordless for private repos
# so that this will run without incident.
  - name: Install vim,r, gdebi
    apt:
      name:
        - vim
        - gdebi-core
        - git
        - ansible
        - r-base

  - name: Install dropbox, gnome extension tools
    apt:
      name:
        - nautilus-dropbox
        - gnome-tweak-tool
        - gnome-shell-extensions
        - chrome-gnome-shell

  - name: Install python3-dev package
    apt:
      name:
        - python3-dev

  - name: Install virtualbox
    apt:
      name:
        - virtualbox-6.0

  - name: Install chrome for node debugging
    apt:
      name:
        - google-chrome-stable

  - name: Install docker
    apt:
      name:
        - docker-ce
        - docker-compose

  - name: Clone fzf package
    git:
      clone: yes
      repo: https://github.com/junegunn/fzf.git
      dest: ~/.fzf
    become: yes
    become_user: jad

  - name: Get dropbox started up. Will still need to login.
    command: dropbox start -i && dropbox autostart y

  - name: Create some directories
    file:
      state: directory
      mode: 0755
      path: "{{ item }}"
    with_items:
      - "{{ home }}/.vim/pack/features/start"
      - "{{ home }}/.vim/pack/codesyntax/start"
      - "{{ home }}/.vim/pack/colors/opt"
      - "{{ home }}/dev/javascript"
      - "{{ home }}/dev/javascript/react"
      - "{{ home }}/dev/ansible/kubernetes_cluster"
      - "{{ home }}/dev/shellscripts"
      - "{{ home }}/General_Notes"
      - "{{ home }}/Tutorial_Notes"
    become: yes
    become_user: jad

  - name: remove some directories
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - "{{ home }}/Documents"
      - "{{ home }}/Music"
      - "{{ home }}/Public"
      - "{{ home }}/Templates"
      - "{{ home }}/Videos"
      - "{{ home }}/Pictures"

  - name: Create the admin group and join the user to it
    shell: groupadd -f admin && adduser "{{ username }}" admin
    ignore_errors: yes

  - name: Configure sudoers to have nopasswd use of sudo for admin group
    lineinfile:
      path: /etc/sudoers
      line: "{{ item }}"
      state: present
    with_items:
      - "# Members of the admin group may gain root privileges without pass"
      - "%admin ALL=(ALL) NOPASSWD:ALL"

  - name: Remove the default admin permission that override what I inserted
    lineinfile:
      path: /etc/sudoers
      line: "{{ item }}"
      state: absent
    with_items:
      - "# Members of the admin group may gain root privileges"
      - "%admin ALL=(ALL) ALL"

  - name: check if rules file exists
    stat:
      path: "{{ home }}/.git"
    register: homegit

  - name: Get the bash and vim files from my repo for these
    shell: git init && git remote add origin 'https://github.com/jadesrochers/shell_vim_config.git'
    args:
      chdir: "{{ home }}"
    become: yes
    become_user: jad
    when: homegit.stat.exists == false

  - name: Get the bash and vim files from my repo for these
    shell: git fetch && git checkout origin/master -ft
    args:
      chdir: "{{ home }}"
    become: yes
    become_user: jad
    when: homegit.stat.exists == false

  - name: Add configuration to make the default editor vim
    lineinfile:
      path: "{{ home }}/.bashrc"
      line: "{{ item }}"
      state: present
    with_items:
      - 'export VISUAL=vim'
      - 'export EDITOR="$VISUAL"'

  - name: Change the keyboard map so caps lock is control
    command: setxkbmap -option ctrl:nocaps

  - name: Check if fzf appears to have been installed
    shell: grep -E -i -l "fzf" {{ home }}/.bashrc
    register: fzfgrep

  - name: Install fzf fuzzy finder. Should add its own line to .bashrc.
    shell: "{{ home }}/.fzf/install"
    become: yes
    become_user: jad
    when: fzfgrep.stdout != /home/jad/.bashrc

  - name: Add a default keyboard file at /etc/default/keyboard
    copy:
      src: keyboard
      force: yes
      dest: /etc/default

  - name: Source the .bashrc to finish up this part of config
    command: source {{ home }}/.bashrc
